from typing import Optional
from api.domain.entities import BaseEntity

from typing import Optional

class Animal(BaseEntity):
    def __init__(
        self,
        activityLevel: Optional[str] = None,
        adoptedDate: Optional[str] = None,
        adoptionFeeString: Optional[str] = None,
        adultSexesOk: Optional[str] = None,
        ageGroup: Optional[str] = None,
        ageString: Optional[str] = None,
        availableDate: Optional[str] = None,
        birthDate: Optional[str] = None,
        breedPrimary: Optional[str] = None,
        breedPrimaryId: Optional[int] = None,
        breedSecondary: Optional[str] = None,
        breedSecondaryId: Optional[int] = None,
        breedString: Optional[str] = None,
        coatLength: Optional[str] = None,
        colorDetails: Optional[str] = None,
        createdDate: Optional[str] = None,
        descriptionHtml: Optional[str] = None,
        descriptionText: Optional[str] = None,
        distinguishingMarks: Optional[str] = None,
        earType: Optional[str] = None,
        energyLevel: Optional[str] = None,
        exerciseNeeds: Optional[str] = None,
        eyeColor: Optional[str] = None,
        fenceNeeds: Optional[str] = None,
        foundDate: Optional[str] = None,
        foundPostalcode: Optional[str] = None,
        groomingNeeds: Optional[str] = None,
        housetrainedReasonNot: Optional[str] = None,
        indoorOutdoor: Optional[str] = None,
        isAdoptionPending: Optional[bool] = None,
        isAltered: Optional[bool] = None,
        isBirthDateExact: Optional[bool] = None,
        isBreedMixed: Optional[bool] = None,
        isCatsOk: Optional[bool] = None,
        isCourtesyListing: Optional[bool] = None,
        isCurrentVaccinations: Optional[bool] = None,
        isDeclawed: Optional[bool] = None,
        isDogsOk: Optional[bool] = None,
        isFarmAnimalsOk: Optional[bool] = None,
        isFound: Optional[bool] = None,
        isHousetrained: Optional[bool] = None,
        isKidsOk: Optional[bool] = None,
        isMicrochipped: Optional[bool] = None,
        isNeedingFoster: Optional[bool] = None,
        isSeniorsOk: Optional[bool] = None,
        isSpecialNeeds: Optional[bool] = None,
        isSponsorable: Optional[bool] = None,
        isYardRequired: Optional[bool] = None,
        killDate: Optional[str] = None,
        killReason: Optional[str] = None,
        name: Optional[str] = None,
        newPeopleReaction: Optional[str] = None,
        obedienceTraining: Optional[str] = None,
        ownerExperience: Optional[str] = None,
        pictureCount: Optional[int] = None,
        pictureThumbnailUrl: Optional[str] = None,
        priority: Optional[str] = None,
        qualities: Optional[str] = None,
        rescueId: Optional[str] = None,
        searchString: Optional[str] = None,
        sex: Optional[str] = None,
        sheddingLevel: Optional[str] = None,
        sizeCurrent: Optional[str] = None,
        sizeGroup: Optional[str] = None,
        sizePotential: Optional[str] = None,
        sizeUOM: Optional[str] = None,
        slug: Optional[str] = None,
        specialNeedsDetails: Optional[str] = None,
        sponsors: Optional[str] = None,
        sponsorshipDetails: Optional[str] = None,
        sponsorshipMinimum: Optional[str] = None,
        summary: Optional[str] = None,
        tailType: Optional[str] = None,
        trackerimageUrl: Optional[str] = None,
        updatedDate: Optional[str] = None,
        url: Optional[str] = None,
        videoCount: Optional[int] = None,
        videoUrlCount: Optional[int] = None,
        vocalLevel: Optional[str] = None
    ):
        self.__dict__.update(locals())
        del self.self
